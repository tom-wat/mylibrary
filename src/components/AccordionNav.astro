---

---

<nav>
  <ul>
    <li>
      <button class="nav-button" aria-expanded="false"
        >lists
        <span class="nav-icon">
          <img src="/icons/triangle.svg" alt="" />
        </span>
      </button>
      <ul class="nav-list">
        <li><a href="#"><span class="list-content">1</span></a></li>
        <li><a href="#"><span class="list-content">2</span></a></li>
        <li><a href="#"><span class="list-content">3</span></a></li>
      </ul>
    </li>
  </ul>
</nav>

<style>
  .nav-button {
    display: grid;
    grid-template-columns: 1fr 1fr;
    font-size: 1rem;
    background-color: #eee;
    color: #444;
    cursor: pointer;
    padding: 0.5rem;
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
  }
  .nav-list {
    /* display: none;
    &.active {
      display: block;
    } */
    opacity: 0;
    height: 0;
    & li {
      pointer-events: none;
      overflow: hidden;
    }
  }
  .nav-icon {
    width: 1rem;
    justify-self: end;
    transform: rotate(90deg);
  }
  .list-content {
    display: inline-block;
  }
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  li {
    background-color: #ccc;
  }
  a {
    display: inline-block;
    width: 100%;
    text-decoration: none;
    text-align: center;
    padding: 0.5rem 0;
    transition: background-color 0.2s;
    @media (any-hover: hover) {
      &:hover {
        background-color: #ddd;
      }
    }
  }
</style>

<script>
  import gsap from "gsap";
  const navButton = document.querySelector<HTMLButtonElement>(".nav-button");
  const navList = document.querySelector(".nav-list");
  const navIcon = document.querySelector(".nav-icon");
  const listContents = navList.querySelectorAll(".list-content");
  const listItems = navList.querySelectorAll("li");
  let totalHeight = 0;
  listItems.forEach((item) => {
    totalHeight += item.offsetHeight;
  });

  navButton.addEventListener("click", () => {
    const expanded =
      navButton.getAttribute("aria-expanded") === "true" || false;
    navButton.setAttribute("aria-expanded", (!expanded).toString());

    // navList.classList.toggle("active");

    const tl = gsap.timeline();
    if (navButton.getAttribute("aria-expanded") === "false") {
      // Closing the accordion
      tl.to(navIcon, {
        rotation: "90",
        duration: 0.2,
        ease: "power2.out",
      })
        .to(
          listContents,
          {
            duration: 0.2,
            y: 10,
            opacity: 0,
            stagger: -0.05,
            ease: "power2.in",
          },
          "-=0.3"
        )
        .to(
          navList,
          {
            duration: 0.2,
            opacity: 0,
            height: 0,
            ease: "cubic-bezier(0.33, 1, 0.68, 1)",
            onComplete: () => {
              listItems.forEach((item) => {
                item.style.pointerEvents = "none";
              });
            },
          },
          "-=0.1"
        )
        .set(listContents, { y: 0, opacity: 1 });
    } else {
      // Opening the accordion
      tl.to(navIcon, {
        rotation: "180",
        duration: 0.1,
        ease: "power2.in",
      })
        .to(navList, {
          duration: 0.2,
          opacity: 1,
          height: totalHeight,
          ease: "cubic-bezier(0.33, 1, 0.68, 1)",
          onComplete: () => {
            listItems.forEach((item) => {
              item.style.pointerEvents = "auto";
            });
          },
        })
        .from(
          listContents,
          {
            duration: 0.3,
            y: 10,
            opacity: 0,
            stagger: 0.05,
            ease: "power2.out",
          },
          "-=0.1"
        );
    }
  });
</script>
